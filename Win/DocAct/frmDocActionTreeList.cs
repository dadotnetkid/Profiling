using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using DevExpress.XtraTreeList;
using DevExpress.XtraTreeList.Nodes;
using Models;
using Models.Repository;
using Win.WO;

namespace Win.DocAct
{
    public partial class frmDocActionTreeList : DevExpress.XtraEditors.XtraForm
    {
        private string category;

        public frmDocActionTreeList()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext


        }

        private void frmDocActionTreeList_Load(object sender, EventArgs e)
        {
            dropdownsBindingSource.DataSource = new BindingList<Dropdowns>(new UnitOfWork().DropdownsRepo.Get());
            treeList1.ExpandAll();

        }

        private void treeList1_FocusedNodeChanged(object sender, DevExpress.XtraTreeList.FocusedNodeChangedEventArgs e)
        {
            if (treeList1.GetFocusedRow() is Dropdowns item)
            {
                this.btnAdd.Enabled = true;
                if (item.Category == "Programs")
                {
                    btnEdit.Text = @"Edit Program";
                    btnAdd.Text = @"Add New Project";
                    this.category = "Program";
                }
                else if (item.Category == "Projects")
                {
                    btnEdit.Text = @"Edit Project";
                    btnAdd.Text = @"Add New Activity";
                    this.category = "Project";
                }
                else if (item.Category == "Activity")
                {
                    btnEdit.Text = @"Edit Activity";
                    btnAdd.Text = @"Add New Sub Activity";
                    this.category = "Activity";
                }
                else if (item.Category == "SubActivity")
                {
                    btnEdit.Text = @"Edit Sub Activity";
                    this.category = "Sub Activity";
                    this.btnAdd.Enabled = false;
                }
            }
        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            if (treeList1.GetFocusedRow() is Dropdowns item)
            {
                frmAddEditDocActionTree frm = new frmAddEditDocActionTree(category, item, MethodType.Edit);
                frm.ShowDialog();
                dropdownsBindingSource.DataSource = new BindingList<Dropdowns>(new UnitOfWork().DropdownsRepo.Get());
                treeList1.ExpandAll();
            }
        }

        private void treeList1_AfterExpand(object sender, NodeEventArgs e)
        {
            //var res = e.Node.GetValue(0);
            //if ((string)res == "Programs")
            //    e.Node.ImageIndex = 0;
            //else if ((string)res == "Projects")
            //    e.Node.ImageIndex = 1;
            //else if ((string)res == "Activity")
            //    e.Node.ImageIndex = 2;
            //else if ((string)res == "SubActivity")
            //    e.Node.ImageIndex = 3;
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            if (treeList1.GetFocusedRow() is Dropdowns item)
            {
                frmAddEditDocActionTree frm = new frmAddEditDocActionTree(category, item, MethodType.Add);
                frm.ShowDialog();
                dropdownsBindingSource.DataSource = new BindingList<Dropdowns>(new UnitOfWork().DropdownsRepo.Get());
            }
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {

            if (MessageBox.Show("Do you want to delete this?", "Submit", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                return;
            if (treeList1.GetFocusedRow() is Dropdowns item)
            {
                var unitOfWork = new UnitOfWork();
                unitOfWork.DropdownsRepo.Delete(m => m.Id == item.Id);
                unitOfWork.Save();

            }
            dropdownsBindingSource.DataSource = new BindingList<Dropdowns>(new UnitOfWork().DropdownsRepo.Get());
        }

        private void btnNewProgram_Click(object sender, EventArgs e)
        {
            FrmAddEditPrograms frm = new FrmAddEditPrograms();
            frm.ShowDialog();
            dropdownsBindingSource.DataSource = new BindingList<Dropdowns>(new UnitOfWork().DropdownsRepo.Get());
        }
    }
}